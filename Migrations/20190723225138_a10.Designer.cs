// <auto-generated />
using System;
using Economy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Economy.Migrations
{
    [DbContext(typeof(Economy_Context))]
    [Migration("20190723225138_a10")]
    partial class a10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Economy.Models.ActivityType", b =>
                {
                    b.Property<int>("activtyTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("type");

                    b.HasKey("activtyTypeID");

                    b.ToTable("ActivityTypes");
                });

            modelBuilder.Entity("Economy.Models.Asset", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyID");

                    b.Property<decimal>("emount");

                    b.Property<string>("title");

                    b.HasKey("AssetID");

                    b.HasIndex("companyID");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Economy.Models.Company", b =>
                {
                    b.Property<int>("companyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivityTypeactivtyTypeID");

                    b.Property<string>("companyName");

                    b.Property<int?>("ownerID");

                    b.Property<string>("startDate");

                    b.Property<int?>("stateID");

                    b.HasKey("companyID");

                    b.HasIndex("ActivityTypeactivtyTypeID");

                    b.HasIndex("ownerID");

                    b.HasIndex("stateID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Economy.Models.CompanyUser", b =>
                {
                    b.Property<int>("companyUserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyID");

                    b.Property<int?>("userId");

                    b.HasKey("companyUserID");

                    b.HasIndex("companyID");

                    b.HasIndex("userId");

                    b.ToTable("CompanyUser");
                });

            modelBuilder.Entity("Economy.Models.Owner", b =>
                {
                    b.Property<int>("ownerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("mobile");

                    b.Property<string>("post");

                    b.Property<int?>("userId");

                    b.HasKey("ownerID");

                    b.HasIndex("userId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Economy.Models.Project", b =>
                {
                    b.Property<int>("projectID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("astanInvestment");

                    b.Property<int>("capacity");

                    b.Property<int?>("companyID");

                    b.Property<DateTime>("date");

                    b.Property<string>("decription");

                    b.Property<int>("doLenght");

                    b.Property<double>("ownerInvestment");

                    b.Property<int?>("projectTypeID");

                    b.Property<string>("title");

                    b.HasKey("projectID");

                    b.HasIndex("companyID");

                    b.HasIndex("projectTypeID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Economy.Models.ProjectType", b =>
                {
                    b.Property<int>("projectTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("typeName");

                    b.HasKey("projectTypeID");

                    b.ToTable("ProjectType");
                });

            modelBuilder.Entity("Economy.Models.State", b =>
                {
                    b.Property<int>("stateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("stateName");

                    b.HasKey("stateID");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Economy.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<string>("economyCode");

                    b.Property<string>("email");

                    b.Property<string>("mobile");

                    b.Property<string>("name");

                    b.Property<string>("nationalCode");

                    b.Property<string>("password");

                    b.Property<string>("phone");

                    b.Property<int?>("userGroupId");

                    b.Property<string>("username");

                    b.HasKey("userId");

                    b.HasIndex("userGroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Economy.Models.UserGroup", b =>
                {
                    b.Property<int>("userGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("groupName");

                    b.HasKey("userGroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Economy.Models.Asset", b =>
                {
                    b.HasOne("Economy.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("companyID");
                });

            modelBuilder.Entity("Economy.Models.Company", b =>
                {
                    b.HasOne("Economy.Models.ActivityType", "ActivityType")
                        .WithMany("Companies")
                        .HasForeignKey("ActivityTypeactivtyTypeID");

                    b.HasOne("Economy.Models.Owner", "Owner")
                        .WithMany("Companies")
                        .HasForeignKey("ownerID");

                    b.HasOne("Economy.Models.State")
                        .WithMany("Companies")
                        .HasForeignKey("stateID");
                });

            modelBuilder.Entity("Economy.Models.CompanyUser", b =>
                {
                    b.HasOne("Economy.Models.Company", "Company")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("companyID");

                    b.HasOne("Economy.Models.User", "User")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("Economy.Models.Owner", b =>
                {
                    b.HasOne("Economy.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("Economy.Models.Project", b =>
                {
                    b.HasOne("Economy.Models.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("companyID");

                    b.HasOne("Economy.Models.ProjectType", "projectType")
                        .WithMany("Projects")
                        .HasForeignKey("projectTypeID");
                });

            modelBuilder.Entity("Economy.Models.User", b =>
                {
                    b.HasOne("Economy.Models.UserGroup", "UserGroup")
                        .WithMany("Users")
                        .HasForeignKey("userGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
